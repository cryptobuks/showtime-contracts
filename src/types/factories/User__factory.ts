/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { User, UserInterface } from "../User";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103af806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100a6575b600080fd5b61005961005436600461032a565b6100c5565b60405190151581526020015b60405180910390f35b61008d61007c36600461021b565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610065565b61008d6100b43660046102c5565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806100f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461012057600080fd5b919050565b600082601f83011261013657600080fd5b8135602067ffffffffffffffff8211156101525761015261038c565b8160051b61016182820161035b565b83815282810190868401838801850189101561017c57600080fd5b600093505b8584101561019f578035835260019390930192918401918401610181565b50979650505050505050565b600082601f8301126101bc57600080fd5b813567ffffffffffffffff8111156101d6576101d661038c565b6101e9601f8201601f191660200161035b565b8181528460208386010111156101fe57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561023357600080fd5b61023c866100fc565b945061024a602087016100fc565b9350604086013567ffffffffffffffff8082111561026757600080fd5b61027389838a01610125565b9450606088013591508082111561028957600080fd5b61029589838a01610125565b935060808801359150808211156102ab57600080fd5b506102b8888289016101ab565b9150509295509295909350565b600080600080600060a086880312156102dd57600080fd5b6102e6866100fc565b94506102f4602087016100fc565b93506040860135925060608601359150608086013567ffffffffffffffff81111561031e57600080fd5b6102b8888289016101ab565b60006020828403121561033c57600080fd5b81356001600160e01b03198116811461035457600080fd5b9392505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156103845761038461038c565b604052919050565b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000807000a";

type UserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class User__factory extends ContractFactory {
  constructor(...args: UserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "User";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<User> {
    return super.deploy(overrides || {}) as Promise<User>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): User {
    return super.attach(address) as User;
  }
  connect(signer: Signer): User__factory {
    return super.connect(signer) as User__factory;
  }
  static readonly contractName: "User";
  public readonly contractName: "User";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserInterface {
    return new utils.Interface(_abi) as UserInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): User {
    return new Contract(address, _abi, signerOrProvider) as User;
  }
}
