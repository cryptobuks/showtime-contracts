/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface MetaSingleEditionMintableCreatorInterface
  extends utils.Interface {
  contractName: "MetaSingleEditionMintableCreator";
  functions: {
    "createEdition(string,string,string,string,bytes32,string,bytes32,uint256,uint256,address)": FunctionFragment;
    "getEditionAtId(uint256)": FunctionFragment;
    "isTrustedForwarder(address)": FunctionFragment;
    "trustedForwarder()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "createEdition",
    values: [
      string,
      string,
      string,
      string,
      BytesLike,
      string,
      BytesLike,
      BigNumberish,
      BigNumberish,
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getEditionAtId",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "createEdition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEditionAtId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder",
    data: BytesLike
  ): Result;

  events: {};
}

export interface MetaSingleEditionMintableCreator extends BaseContract {
  contractName: "MetaSingleEditionMintableCreator";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MetaSingleEditionMintableCreatorInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    createEdition(
      _name: string,
      _symbol: string,
      _description: string,
      _animationUrl: string,
      _animationHash: BytesLike,
      _imageUrl: string,
      _imageHash: BytesLike,
      _editionSize: BigNumberish,
      _royaltyBPS: BigNumberish,
      minter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getEditionAtId(
      editionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    isTrustedForwarder(
      forwarder: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    trustedForwarder(overrides?: CallOverrides): Promise<[string]>;
  };

  createEdition(
    _name: string,
    _symbol: string,
    _description: string,
    _animationUrl: string,
    _animationHash: BytesLike,
    _imageUrl: string,
    _imageHash: BytesLike,
    _editionSize: BigNumberish,
    _royaltyBPS: BigNumberish,
    minter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getEditionAtId(
    editionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  isTrustedForwarder(
    forwarder: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  trustedForwarder(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    createEdition(
      _name: string,
      _symbol: string,
      _description: string,
      _animationUrl: string,
      _animationHash: BytesLike,
      _imageUrl: string,
      _imageHash: BytesLike,
      _editionSize: BigNumberish,
      _royaltyBPS: BigNumberish,
      minter: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getEditionAtId(
      editionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    isTrustedForwarder(
      forwarder: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    trustedForwarder(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    createEdition(
      _name: string,
      _symbol: string,
      _description: string,
      _animationUrl: string,
      _animationHash: BytesLike,
      _imageUrl: string,
      _imageHash: BytesLike,
      _editionSize: BigNumberish,
      _royaltyBPS: BigNumberish,
      minter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getEditionAtId(
      editionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isTrustedForwarder(
      forwarder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    trustedForwarder(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    createEdition(
      _name: string,
      _symbol: string,
      _description: string,
      _animationUrl: string,
      _animationHash: BytesLike,
      _imageUrl: string,
      _imageHash: BytesLike,
      _editionSize: BigNumberish,
      _royaltyBPS: BigNumberish,
      minter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getEditionAtId(
      editionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isTrustedForwarder(
      forwarder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    trustedForwarder(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
